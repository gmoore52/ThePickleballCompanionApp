DROP TABLE IF EXISTS EVENTS CASCADE;
DROP TABLE IF EXISTS LOCATION_META CASCADE;
DROP TABLE IF EXISTS LOCATIONS CASCADE;
DROP TABLE IF EXISTS GAMES CASCADE;
DROP TABLE IF EXISTS REQUESTS CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;


CREATE TABLE USERS(
    USER_NAME VARCHAR(32) PRIMARY KEY,
    USER_FULL_NAME VARCHAR(120) NOT NULL,
    EMAIL_ADDR VARCHAR(120) NOT NULL,
    PASSWORD VARCHAR(60) NOT NULL,
    PROFILE_IMG_LOC VARCHAR(120),
    SKILL_LVL INTEGER,
    ACC_CREATION_DATE TIMESTAMP NOT NULL
);

CREATE TABLE LOCATION_META(
    META_ID SERIAL PRIMARY KEY,
    AVAILABILITY VARCHAR(8),
    SHELTER BOOLEAN,
    NET_TYPE VARCHAR(10)
);

CREATE TABLE LOCATIONS(
    LOC_ID SERIAL PRIMARY KEY,
    COURT_NAME VARCHAR(50) NOT NULL,
    COURT_PIC VARCHAR(128),
    NUM_OF_COURTS INTEGER NOT NULL,
    ADDRESS VARCHAR(120) NOT NULL,
    COORDINATES VARCHAR(120),
    COURT_META_ID INTEGER REFERENCES LOCATION_META(META_ID)
);

CREATE TABLE GAMES(
    GAME_ID SERIAL PRIMARY KEY,
    GAME_DATE TIMESTAMP NOT NULL,
    PLAYER_1_ID VARCHAR(32) NOT NULL REFERENCES USERS(USER_NAME),
    PLAYER_2_ID VARCHAR(32) NOT NULL REFERENCES USERS(USER_NAME),
    PLAYER_3_ID VARCHAR(32) REFERENCES USERS(USER_NAME),
    PLAYER_4_ID VARCHAR(32) REFERENCES USERS(USER_NAME),
    LOCATION_ID INTEGER REFERENCES LOCATIONS(LOC_ID),
    TEAM_1_SCORE INTEGER NOT NULL,
    TEAM_2_SCORE INTEGER NOT NULL,
    DESCRIPTION VARCHAR(512)
);



CREATE TABLE EVENTS(
    EVENT_ID SERIAL PRIMARY KEY,
    EVENT_START TIMESTAMP NOT NULL,
    EVENT_END TIMESTAMP NOT NULL,
    EVENT_LOC INTEGER NOT NULL REFERENCES LOCATIONS(LOC_ID),
    EVENT_TITLE VARCHAR(64) NOT NULL,
    EVENT_DESC VARCHAR(120) NOT NULL
);

CREATE TABLE REQUESTS
(
    REQUEST_ID       SERIAL PRIMARY KEY,
    REQUEST_TYPE     VARCHAR(25) NOT NULL,
    REQUEST_DATE     TIMESTAMP NOT NULL,
    ORIGIN_ID        VARCHAR(32)   NOT NULL REFERENCES USERS (USER_NAME),
    EVENT_ID         INTEGER REFERENCES EVENTS (EVENT_ID),
    DESTINATION_ID   VARCHAR(32)   NOT NULL REFERENCES USERS (USER_NAME),
    REQUEST_STATUS   INTEGER   NOT NULL
);

-- Insert all variations of the base metadata for each possible location
INSERT INTO LOCATION_META(AVAILABILITY, SHELTER, NET_TYPE)
SELECT * FROM
     (
         (SELECT 'PUBLIC' UNION
          SELECT 'PRIVATE' UNION
          SELECT 'MEMBER' UNION
          SELECT 'FEE') A
           CROSS JOIN
         (SELECT TRUE UNION
          SELECT FALSE) S
            CROSS JOIN
         (SELECT 'BYO' UNION
          SELECT 'PERMANENT' UNION
          SELECT 'PORTABLE') N_T
     );